// This is your Prisma schema file for PayMe SaaS
// Contract-to-Payment workflow platform

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String
  clerkId       String   @unique
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  clients Client[]

  @@map("users")
}

model Client {
  id        String   @id @default(cuid())
  userId    String
  name      String
  email     String?
  phone     String?
  address   String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  projects Project[]

  @@map("clients")
}

model Project {
  id          String      @id @default(cuid())
  clientId    String
  name        String
  description String?
  status      ProjectStatus @default(ACTIVE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  client    Client     @relation(fields: [clientId], references: [id], onDelete: Cascade)
  contracts Contract[]
  invoices  Invoice[]

  @@map("projects")
}

model Contract {
  id            String         @id @default(cuid())
  projectId     String
  templateType  ContractType
  title         String
  content       String?        // JSON content for contract details
  hourlyRate    Decimal?       @db.Decimal(10, 2)
  fixedAmount   Decimal?       @db.Decimal(10, 2)
  paymentTerms  String?
  deliverables  String?        // JSON array of deliverables
  timeline      String?
  
  // DocuSign integration
  docusignEnvelopeId String?    @unique
  docusignStatus     DocuSignStatus @default(DRAFT)
  signedAt           DateTime?
  
  status        ContractStatus @default(DRAFT)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  // Relations
  project  Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  invoices Invoice[]

  @@map("contracts")
}

model Invoice {
  id             String        @id @default(cuid())
  projectId      String
  contractId     String?
  invoiceNumber  String        @unique
  
  // Stripe integration
  stripeInvoiceId String?      @unique
  stripeCustomerId String?
  
  amount         Decimal       @db.Decimal(10, 2)
  taxAmount      Decimal?      @db.Decimal(10, 2)
  totalAmount    Decimal       @db.Decimal(10, 2)
  description    String?
  lineItems      String?       // JSON array of line items
  
  dueDate        DateTime
  issuedAt       DateTime      @default(now())
  paidAt         DateTime?
  
  status         InvoiceStatus @default(DRAFT)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  // Relations
  project  Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  contract Contract? @relation(fields: [contractId], references: [id], onDelete: SetNull)
  payments Payment[]

  @@map("invoices")
}

model Payment {
  id                String        @id @default(cuid())
  invoiceId         String
  
  // Stripe integration
  stripePaymentId   String?       @unique
  stripeChargeId    String?
  
  amount            Decimal       @db.Decimal(10, 2)
  currency          String        @default("usd")
  paymentMethod     String?       // card, ach, etc.
  
  status            PaymentStatus @default(PENDING)
  failureReason     String?
  
  paidAt            DateTime?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  // Relations
  invoice Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@map("payments")
}

// Enums
enum ProjectStatus {
  ACTIVE
  COMPLETED
  CANCELLED
  ON_HOLD
}

enum ContractType {
  HOURLY
  FIXED_PRICE
  RETAINER
  DESIGN_SERVICES
  DEVELOPMENT_SERVICES
}

enum ContractStatus {
  DRAFT
  SENT_FOR_SIGNATURE
  SIGNED
  EXPIRED
  CANCELLED
}

enum DocuSignStatus {
  DRAFT
  SENT
  DELIVERED
  SIGNED
  COMPLETED
  DECLINED
  EXPIRED
}

enum InvoiceStatus {
  DRAFT
  SENT
  VIEWED
  PAID
  OVERDUE
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PROCESSING
  SUCCEEDED
  FAILED
  REFUNDED
  CANCELLED
}